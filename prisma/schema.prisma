// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
}

enum ProjectStatus {
  ACTIVE
  INACTIVE
  DELETED
}


model User {
  id       Int      @id @default(autoincrement())
  name     String
  last_name String
  email    String   @unique
  password String
  telephone String   @unique
  role     Role? @relation(fields: [role_name], references: [name])
  role_name String?
  log Log[]

}


model Role{
  name String @id
  description String?
  user User[]
}


model Project {
  id          Int      @id @default(autoincrement())
  description String
  trimester   String
  year        String
  organization Organization @relation(fields: [organization_id], references: [id])
  organization_id Int
  aproach Approach @relation(fields: [aproach_id], references: [id])
  aproach_id Int
  start       DateTime
  end         DateTime
  status      ProjectStatus @default(ACTIVE)
  okrDesign OkrDesing?
  area       String?
}

model Log {
  id      Int      @id @default(autoincrement())
  user   User     @relation(fields: [user_id], references: [id])
  user_id Int
  module  String
  event   String
  date    DateTime
}


model Organization {
  id          Int      @id @default(autoincrement())
  name        String
  country     String
  estate String
  cellphone   String
  email       String
  personResponsible String
  projects    Project[]
  
}

model Approach {
  id          Int      @id @default(autoincrement())
  name String
  projects    Project[]
}

model Objective {
  id          Int      @id @default(autoincrement())
  name String
  objectiveDetails ObjectiveDetail[]
  okrDesignId       Int                // New field for foreign key
  okrDesign         OkrDesing          @relation(fields: [okrDesignId], references: [id])
}
model OkrDesing {
  id          Int      @id @default(autoincrement())
  project Project @relation(fields: [project_id], references: [id])
  project_id Int @unique
  objectives Objective[]
}

model ObjectiveDetail {
  id           Int       @id @default(autoincrement())
  objective    Objective @relation(fields: [objective_id], references: [id])
  objective_id Int
  keyResult    KeyResult? @relation(fields: [keyResult_id], references: [id])
  keyResult_id Int?
  show         Boolean @default(false)
}

model KeyResult {
  id          Int      @id @default(autoincrement())
  keyResult String
  keyIndicator String
  initiative String
  initiativeType InitiativeType @relation(fields: [initiativeType_id], references: [id])
  initiativeType_id Int
  objectiveDetail ObjectiveDetail []
  priority Int
  value Float
  typeOfValue String
}
model  InitiativeType {
  id         Int      @id @default(autoincrement())
  name String
  keyResult KeyResult[]
}
